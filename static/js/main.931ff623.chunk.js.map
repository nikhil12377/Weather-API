{"version":3,"sources":["actions/Index.js","Components/Form.jsx","Components/WeatherCard.jsx","Components/ThemeToggle.jsx","App.jsx","reducers/PlaceDataReducer.js","reducers/PlaceReducer.js","reducers/ThemeReducer.js","reducers/Index.js","store.js","index.js"],"names":["UpdatePlaceData","place","dispatch","fetch","then","res","json","data","type","payload","Form","useSelector","state","theme","useDispatch","className","placeholder","value","onKeyUp","e","key","onChange","UpdatePlace","target","onClick","WeatherCard","placeData","location","src","current","condition","icon","alt","temp_c","text","name","wind_kph","humidity","cloud","ThemeToggle","App","PlaceDataReducer","action","PlaceReducer","ThemeReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.931ff623.chunk.js","sourcesContent":["const UpdatePlace = (place) => {\n    return {\n        type: \"UPDATE_PLACE\",\n        payload: place\n    };\n};\n\nconst UpdatePlaceData = (place) => {\n    return (dispatch) => {\n        fetch(\n            `https://api.weatherapi.com/v1/current.json?key=7293607f61b848339b9110324212608&q=${place}`\n        )\n            .then((res) => res.json())\n            .then((data) => {\n                dispatch({\n                    type: \"UPDATE_PLACE_DATA\",\n                    payload: data\n                })\n            });\n\n    }\n};\n\nconst ToggleTheme = () => {\n    return {\n        type: \"TOGGLE_THEME\"\n    };\n};\n\nexport { UpdatePlace, UpdatePlaceData, ToggleTheme };","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UpdatePlace, UpdatePlaceData } from \"../actions/Index\";\n\nexport default function Form() {\n  const place = useSelector((state) => state.place);\n  const theme = useSelector((state) => state.theme);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 form\">\n          <div className=\"box\">\n            <input\n              type=\"text\"\n              placeholder=\"enter city name\"\n              value={place}\n              onKeyUp={(e) => {\n                if (e.key === \"Enter\") {\n                  dispatch(UpdatePlaceData(place));\n                }\n              }}\n              onChange={(e) => {\n                dispatch(UpdatePlace(e.target.value));\n              }}\n            />\n            <button\n              className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\n              onClick={() => {\n                dispatch(UpdatePlaceData(place));\n              }}\n            >\n              search\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport default function WeatherCard() {\n  const placeData = useSelector((state) => state.placeData);\n  const theme = useSelector((state) => state.theme);\n  return (\n    <div className=\"container\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"offset-md-4 col-12 col-md-4\">\n            {placeData.location ? (\n              <div className={theme ? \"card Dark\" : \"card\"}>\n                <img src={placeData.current.condition.icon} alt=\"\" />\n                <div className=\"temp\">{placeData.current.temp_c}Â°</div>\n                <div className=\"desc\">{placeData.current.condition.text}</div>\n                <div className=\"place\">{placeData.location.name}</div>\n                <div className=\"container\">\n                  <div className=\"row whp\">\n                    <div className=\"col\">\n                      <div className=\"title\">Wind Now</div>\n                      <div className=\"data\">\n                        {placeData.current.wind_kph}\n                        <span className=\"unit\">KM</span>\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"title\">Humidity</div>\n                      <div className=\"data\">\n                        {placeData.current.humidity}\n                        <span className=\"unit\">%</span>\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"title\">Cloud</div>\n                      <div className=\"data\">\n                        {placeData.current.cloud}\n                        <span className=\"unit\">%</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <h2 className=\"heading\">Enter the name of place</h2>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToggleTheme } from \"../actions/Index\";\n\nexport default function ThemeToggle() {\n  const theme = useSelector((state) => state.theme);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"toggle-theme\">\n      <button\n        className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\n        onClick={() => {\n          dispatch(ToggleTheme());\n        }}\n      >\n        {theme ? \"Light\" : \"Dark\"}\n      </button>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import { useEffect, useState } from \"react\";\nimport Form from \"./Components/Form\";\nimport WeatherCard from \"./Components/WeatherCard\";\nimport ThemeToggle from \"./Components/ThemeToggle\";\nimport { useSelector } from \"react-redux\";\nexport default function App() {\n  const theme = useSelector((state) => state.theme);\n  return (\n    <div className={theme ? \"App Dark\" : \"App Light\"}>\n      <ThemeToggle />\n      <Form />\n      <WeatherCard />\n    </div>\n  );\n}\n","const PlaceDataReducer = (state = {}, action) => {\n    if (action.type === \"UPDATE_PLACE_DATA\") {\n        return action.payload;\n    };\n\n    return state;\n};\n\nexport default PlaceDataReducer;","const PlaceReducer = (state = \"\", action) => {\n    if (action.type === \"UPDATE_PLACE\") {\n        return action.payload;\n    };\n\n    return state;\n};\n\nexport default PlaceReducer;","const ThemeReducer = (state = false, action) => {\n    if (action.type === \"TOGGLE_THEME\") {\n        return !state;\n    };\n    return state;\n};\n\nexport default ThemeReducer;","import { combineReducers } from \"redux\";\nimport PlaceDataReducer from './PlaceDataReducer';\nimport PlaceReducer from './PlaceReducer';\nimport ThemeReducer from './ThemeReducer';\n\nconst rootReducer = combineReducers({\n    place: PlaceReducer,\n    placeData: PlaceDataReducer,\n    theme: ThemeReducer\n})\n\nexport default rootReducer;","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/Index';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}